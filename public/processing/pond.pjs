HashMap<String, Fish> fishes;
ArrayList<Bubble> foregroundBubbles;
ArrayList<Bubble> backgroundBubbles; 
String myId;
var touches;


void setup() {
	size(1200, 500);

    fishes = new HashMap<String, Fish>();
	//frameRate( 30 );
	
    PVector location = new PVector( random( 100, width - 100 ), random( 100, height - 100 ) );
    Fish fish = new Fish( location, random( 1.0, 3.5 ), 0.2 );
    myId = fish.getId();
    fishes.put( myId, fish );

    foregroundBubbles = new ArrayList<Bubble>();
    backgroundBubbles = new ArrayList<Bubble>();
}


void draw() {
	background( 105, 210, 231, 0 );

    randomNumber = random(0, 100);

    if( randomNumber > 98) {
        foregroundBubbles.add(new Bubble( color(int(random(100, 255)), 200)));
    } else if( randomNumber < 2) {
        backgroundBubbles.add(new Bubble( color(int(random(100, 255)), 100)));
    }

    for (Bubble aBubble : backgroundBubbles) {
        aBubble.update();
        aBubble.render();
    }

	ArrayList<String> oldFishes = new ArrayList<String>();
	
    Iterator<Entry<String,Fish>> it = fishes.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry<String,Fish> pair = it.next();
        Fish fish = pair.getValue();
        if (millis() - fish.getLastUpdateTime() > 5000 && !fish.getId().equals(myId)) {
        	String oldFishId = pair.getKey();
        	oldFishes.add(oldFishId);
        } else {
            fish.update();
            fish.render();
        }
    }

    for (String oldFishId : oldFishes) {
    	fishes.remove(oldFishId);
    }

    for (Bubble aBubble : foregroundBubbles) {
        aBubble.update();
        aBubble.render();
    }

}

void mouseMoved() {
    PVector mouseVector = new PVector(mouseX, mouseY);
    Fish fish = fishes.get( myId );
    fish.setMousePosition(mouseVector);
}

Fish getMyFish() {
    return fishes.get(myId);
}

void updateRemote(PVector myLocation, PVector mousePosition, Color stripeColor, String id, float maxSpeed, float maxForce, float bodySizeW, float bodySizeH) {
    Fish remoteFish = fishes.get(id);
    if(remoteFish == null) {
        remoteFish = new Fish(new PVector(myLocation.x, myLocation.y), new PVector(mousePosition.x, mousePosition.y), stripeColor, id, maxSpeed, maxForce, bodySizeW, bodySizeH);
        fishes.put(id, remoteFish);
    }
    else {
        remoteFish.setMousePosition(new PVector(mousePosition.x, mousePosition.y));
        remoteFish.setLastUpdateTime(millis());
    }
}

void getFishes() {
    return fishes;
}

void getBubble() {
    return myBubble;
}

